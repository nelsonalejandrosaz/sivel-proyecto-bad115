//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sivel_proyecto_bad115.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Collections.Generic;

    public partial class bad115Entidades : DbContext
    {
        public bad115Entidades()
            : base("name=bad115Entidades")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<BODEGAS> BODEGAS { get; set; }
        public virtual DbSet<ESTADO_IMPORTACIONES> ESTADO_IMPORTACIONES { get; set; }
        public virtual DbSet<IMPORTACIONES> IMPORTACIONES { get; set; }
        public virtual DbSet<IMPORTADORES> IMPORTADORES { get; set; }
        public virtual DbSet<MOVIMIENTOS> MOVIMIENTOS { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<TALLERES> TALLERES { get; set; }
        public virtual DbSet<TIPO_MOVIMIENTOS> TIPO_MOVIMIENTOS { get; set; }
        public virtual DbSet<TIPO_REMOLQUES> TIPO_REMOLQUES { get; set; }
        public virtual DbSet<UBICACIONES> UBICACIONES { get; set; }
        public virtual DbSet<USUARIOS> USUARIOS { get; set; }
        public virtual DbSet<VEHICULOS> VEHICULOS { get; set; }
    
        public virtual int ActualizarImportacion(Nullable<int> id_importacion, Nullable<int> id_ubicacion, Nullable<int> id_eimportador, Nullable<int> id_importador, Nullable<int> id_vehiculo, Nullable<System.DateTime> fecha, string desperfecto, Nullable<decimal> precio_venta)
        {
            var id_importacionParameter = id_importacion.HasValue ?
                new ObjectParameter("id_importacion", id_importacion) :
                new ObjectParameter("id_importacion", typeof(int));
    
            var id_ubicacionParameter = id_ubicacion.HasValue ?
                new ObjectParameter("id_ubicacion", id_ubicacion) :
                new ObjectParameter("id_ubicacion", typeof(int));
    
            var id_eimportadorParameter = id_eimportador.HasValue ?
                new ObjectParameter("id_eimportador", id_eimportador) :
                new ObjectParameter("id_eimportador", typeof(int));
    
            var id_importadorParameter = id_importador.HasValue ?
                new ObjectParameter("id_importador", id_importador) :
                new ObjectParameter("id_importador", typeof(int));
    
            var id_vehiculoParameter = id_vehiculo.HasValue ?
                new ObjectParameter("id_vehiculo", id_vehiculo) :
                new ObjectParameter("id_vehiculo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var desperfectoParameter = desperfecto != null ?
                new ObjectParameter("desperfecto", desperfecto) :
                new ObjectParameter("desperfecto", typeof(string));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImportacion", id_importacionParameter, id_ubicacionParameter, id_eimportadorParameter, id_importadorParameter, id_vehiculoParameter, fechaParameter, desperfectoParameter, precio_ventaParameter);
        }


        public virtual int ActualizarTaller(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTaller", idParameter, nombreParameter);
        }
    
        public virtual int ActualizarUbicaciones(Nullable<int> id, Nullable<int> bodega, Nullable<int> nivel, Nullable<int> numeroparqueo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var bodegaParameter = bodega.HasValue ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(int));
    
            var numeroparqueoParameter = numeroparqueo.HasValue ?
                new ObjectParameter("numeroparqueo", numeroparqueo) :
                new ObjectParameter("numeroparqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUbicaciones", idParameter, bodegaParameter, nivelParameter, numeroparqueoParameter);
        }
    
        public virtual int ActualizarVehiculos(Nullable<int> id, string marca, string modelo, Nullable<int> anio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarVehiculos", idParameter, marcaParameter, modeloParameter, anioParameter);
        }
    
        public virtual int DeleteBodega(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBodega", idParameter);
        }
    
        public virtual int DeleteEImportaciones(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEImportaciones", idParameter);
        }
    
        public virtual int DeleteMovimiento(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMovimiento", idParameter);
        }
    
        public virtual int DeleteRol(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRol", idParameter);
        }
    
        public virtual int DeleteTMovimientos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTMovimientos", idParameter);
        }
    
        public virtual int DeleteTRemolques(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTRemolques", idParameter);
        }
    
        public virtual int editarImportadores(Nullable<int> id_importador, Nullable<int> nit, string nombre, string apellido, string apellido_casada, string genero, Nullable<System.DateTime> fechadeNacimiento, string direccion, string persona_responsable, string telefono_responsable, string email)
        {
            var id_importadorParameter = id_importador.HasValue ?
                new ObjectParameter("id_importador", id_importador) :
                new ObjectParameter("id_importador", typeof(int));
    
            var nitParameter = nit.HasValue ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var apellido_casadaParameter = apellido_casada != null ?
                new ObjectParameter("apellido_casada", apellido_casada) :
                new ObjectParameter("apellido_casada", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fechadeNacimientoParameter = fechadeNacimiento.HasValue ?
                new ObjectParameter("fechadeNacimiento", fechadeNacimiento) :
                new ObjectParameter("fechadeNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var persona_responsableParameter = persona_responsable != null ?
                new ObjectParameter("persona_responsable", persona_responsable) :
                new ObjectParameter("persona_responsable", typeof(string));
    
            var telefono_responsableParameter = telefono_responsable != null ?
                new ObjectParameter("telefono_responsable", telefono_responsable) :
                new ObjectParameter("telefono_responsable", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarImportadores", id_importadorParameter, nitParameter, nombreParameter, apellidoParameter, apellido_casadaParameter, generoParameter, fechadeNacimientoParameter, direccionParameter, persona_responsableParameter, telefono_responsableParameter, emailParameter);
        }
    
        public virtual int EliminarImportacion(Nullable<int> id_importacion)
        {
            var id_importacionParameter = id_importacion.HasValue ?
                new ObjectParameter("id_importacion", id_importacion) :
                new ObjectParameter("id_importacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarImportacion", id_importacionParameter);
        }
    
        public virtual int EliminarImportador(Nullable<int> id_importador)
        {
            var id_importadorParameter = id_importador.HasValue ?
                new ObjectParameter("id_importador", id_importador) :
                new ObjectParameter("id_importador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarImportador", id_importadorParameter);
        }
    
        public virtual int EliminarTaller(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTaller", idParameter);
        }
    
        public virtual int EliminarUbicacion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUbicacion", idParameter);
        }
    
        public virtual int EliminarVehiculos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarVehiculos", idParameter);
        }
    
        public virtual ObjectResult<IndexBodegas_Result> IndexBodegas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexBodegas_Result>("IndexBodegas");
        }
    
        public virtual ObjectResult<IndexEImportaciones_Result> IndexEImportaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexEImportaciones_Result>("IndexEImportaciones");
        }
    
        public virtual ObjectResult<IndexMovimiento_Result> IndexMovimiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexMovimiento_Result>("IndexMovimiento");
        }
    
        public virtual ObjectResult<IndexRol_Result> IndexRol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexRol_Result>("IndexRol");
        }
    
        public virtual ObjectResult<IndexTMovimientos_Result> IndexTMovimientos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexTMovimientos_Result>("IndexTMovimientos");
        }
    
        public virtual ObjectResult<IndexTRemolques_Result> IndexTRemolques()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IndexTRemolques_Result>("IndexTRemolques");
        }
    
        public virtual int InsertarImportacion(Nullable<int> id_ubicacion, Nullable<int> id_eimportador, Nullable<int> id_importador, Nullable<int> id_vehiculo, Nullable<System.DateTime> fecha, string desperfecto, Nullable<decimal> precio_venta)
        {
            var id_ubicacionParameter = id_ubicacion.HasValue ?
                new ObjectParameter("id_ubicacion", id_ubicacion) :
                new ObjectParameter("id_ubicacion", typeof(int));
    
            var id_eimportadorParameter = id_eimportador.HasValue ?
                new ObjectParameter("id_eimportador", id_eimportador) :
                new ObjectParameter("id_eimportador", typeof(int));
    
            var id_importadorParameter = id_importador.HasValue ?
                new ObjectParameter("id_importador", id_importador) :
                new ObjectParameter("id_importador", typeof(int));
    
            var id_vehiculoParameter = id_vehiculo.HasValue ?
                new ObjectParameter("id_vehiculo", id_vehiculo) :
                new ObjectParameter("id_vehiculo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var desperfectoParameter = desperfecto != null ?
                new ObjectParameter("desperfecto", desperfecto) :
                new ObjectParameter("desperfecto", typeof(string));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarImportacion", id_ubicacionParameter, id_eimportadorParameter, id_importadorParameter, id_vehiculoParameter, fechaParameter, desperfectoParameter, precio_ventaParameter);
        }
    
        public virtual int InsertarImportador(Nullable<int> nit, string nombre, string apellido, string apellido_casada, string genero, Nullable<System.DateTime> fechadeNacimiento, string direccion, string persona_responsable, string telefono_responsable, string email)
        {
            var nitParameter = nit.HasValue ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var apellido_casadaParameter = apellido_casada != null ?
                new ObjectParameter("apellido_casada", apellido_casada) :
                new ObjectParameter("apellido_casada", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fechadeNacimientoParameter = fechadeNacimiento.HasValue ?
                new ObjectParameter("fechadeNacimiento", fechadeNacimiento) :
                new ObjectParameter("fechadeNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var persona_responsableParameter = persona_responsable != null ?
                new ObjectParameter("persona_responsable", persona_responsable) :
                new ObjectParameter("persona_responsable", typeof(string));
    
            var telefono_responsableParameter = telefono_responsable != null ?
                new ObjectParameter("telefono_responsable", telefono_responsable) :
                new ObjectParameter("telefono_responsable", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarImportador", nitParameter, nombreParameter, apellidoParameter, apellido_casadaParameter, generoParameter, fechadeNacimientoParameter, direccionParameter, persona_responsableParameter, telefono_responsableParameter, emailParameter);
        }
    
        public virtual int InsertarTaller(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTaller", nombreParameter);
        }
    
        public virtual int InsertarUbicacion(Nullable<int> bodega, Nullable<int> nivel, Nullable<int> numeroparqueo)
        {
            var bodegaParameter = bodega.HasValue ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(int));
    
            var numeroparqueoParameter = numeroparqueo.HasValue ?
                new ObjectParameter("numeroparqueo", numeroparqueo) :
                new ObjectParameter("numeroparqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarUbicacion", bodegaParameter, nivelParameter, numeroparqueoParameter);
        }
    
        public virtual int InsertarVehiculo(string marca, string modelo, Nullable<int> anio)
        {
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarVehiculo", marcaParameter, modeloParameter, anioParameter);
        }
    
        public virtual ObjectResult<ShowBodega_Result> ShowBodega(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowBodega_Result>("ShowBodega", idParameter);
        }
    
        public virtual ObjectResult<ShowEImportaciones_Result> ShowEImportaciones(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowEImportaciones_Result>("ShowEImportaciones", idParameter);
        }
    
        public virtual ObjectResult<ShowMovimiento_Result> ShowMovimiento(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowMovimiento_Result>("ShowMovimiento", idParameter);
        }
    
        public virtual ObjectResult<ShowRol_Result> ShowRol(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowRol_Result>("ShowRol", idParameter);
        }
    
        public virtual ObjectResult<ShowTMovimientos_Result> ShowTMovimientos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTMovimientos_Result>("ShowTMovimientos", idParameter);
        }
    
        public virtual ObjectResult<ShowTRemolques_Result> ShowTRemolques(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTRemolques_Result>("ShowTRemolques", idParameter);
        }
    
        public virtual int StoreTRemolques(Nullable<int> id, Nullable<int> tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreTRemolques", idParameter, tipoParameter);
        }
    
        public virtual int UpdateBodega(Nullable<int> id, string nombre, Nullable<int> capacidad_max)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var capacidad_maxParameter = capacidad_max.HasValue ?
                new ObjectParameter("capacidad_max", capacidad_max) :
                new ObjectParameter("capacidad_max", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBodega", idParameter, nombreParameter, capacidad_maxParameter);
        }
    
        public virtual int UpdateEImportaciones(Nullable<int> id, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEImportaciones", idParameter, estadoParameter);
        }
    
        public virtual int UpdateMovimiento(Nullable<int> id, Nullable<System.DateTime> fecha, Nullable<int> id_taller, Nullable<int> id_importacion, Nullable<int> id_tmovimiento, Nullable<int> id_tremolque)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_tallerParameter = id_taller.HasValue ?
                new ObjectParameter("id_taller", id_taller) :
                new ObjectParameter("id_taller", typeof(int));
    
            var id_importacionParameter = id_importacion.HasValue ?
                new ObjectParameter("id_importacion", id_importacion) :
                new ObjectParameter("id_importacion", typeof(int));
    
            var id_tmovimientoParameter = id_tmovimiento.HasValue ?
                new ObjectParameter("id_tmovimiento", id_tmovimiento) :
                new ObjectParameter("id_tmovimiento", typeof(int));
    
            var id_tremolqueParameter = id_tremolque.HasValue ?
                new ObjectParameter("id_tremolque", id_tremolque) :
                new ObjectParameter("id_tremolque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMovimiento", idParameter, fechaParameter, id_tallerParameter, id_importacionParameter, id_tmovimientoParameter, id_tremolqueParameter);
        }
    
        public virtual int UpdateRol(Nullable<int> id, string rol)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRol", idParameter, rolParameter);
        }
    
        public virtual int UpdateTMovimientos(Nullable<int> id, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTMovimientos", idParameter, tipoParameter);
        }
    
        public virtual int UpdateTRemolques(Nullable<int> id, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTRemolques", idParameter, tipoParameter);
        }
    
        public virtual ObjectResult<VerImportaciones_Result> VerImportaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerImportaciones_Result>("VerImportaciones");
        }
    
        public virtual ObjectResult<verImportadores_Result> verImportadores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verImportadores_Result>("verImportadores");
        }
    
        public virtual ObjectResult<VerTalleres_Result> VerTalleres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerTalleres_Result>("VerTalleres");
        }
    
        public virtual ObjectResult<VerUbicacion_Result> VerUbicacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerUbicacion_Result>("VerUbicacion");
        }
    
        public virtual ObjectResult<VerVehiculos_Result> VerVehiculos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerVehiculos_Result>("VerVehiculos");
        }
    }
}
